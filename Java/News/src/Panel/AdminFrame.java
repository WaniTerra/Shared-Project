package Panel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import Objects.*;
import Panel.AdminMainFrame;
import Panel.LoginFrame;
import Panel.PublicMethods;
import Panel.SigninFrame;
import SQL.DatabaseCodes;
import com.fasterxml.jackson.core.JsonProcessingException;
import java.awt.Component;
import java.awt.Image;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author erens
 */
public class AdminFrame extends javax.swing.JFrame {

    /**
     * Creates new form AdminFrame
     */
    public AdminFrame() {
        initComponents();
        PublicMethods.generalLabel(labelNowUser);
        String email = labelNowUser.getText().split("\n")[0].replace("Email = ", "").trim();

        for (Users user : Admin.getAllAdmin()) {
            Admin admin = (Admin) user;

            if (email.equals(admin.getEmail())) {
                nowAdmin = admin;
                break;
            }

        }

        labelAdminNumber.setText("Admin Number -> " + Admin.getAllAdmin().size());
        adminTable.setRowHeight(35);
        comboEdit.addItem("Name");
        comboEdit.addItem("Surname");
        comboEdit.addItem("Gender");
        comboEdit.addItem("Password");

        adminTable.getTableHeader().setResizingAllowed(false);

        for (Users users : Admin.getAllAdmin()) {
            Admin admin = (Admin) users;
            allAdminModel.addRow(new Object[]{admin.getName(), admin.getSurname(), admin.getEmail(), admin.getGender(), admin.getPermissionLevel()});

        }
        adminTable.setModel(allAdminModel);

        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(allAdminModel);
        adminTable.setRowSorter(sorter);

        if (nowAdmin.getPermissionLevel().equals("1")) {
            btnAdminDelete.setEnabled(false);
            btnAdminEdit.setEnabled(false);
            comboEdit.setEnabled(false);
            txtEdit.setEnabled(false);
        }
    }

    private static Admin nowAdmin = null;

    public static Admin getNowAdmin() {
        return nowAdmin;
    }

    DefaultTableModel allAdminModel = new DefaultTableModel(
            new Object[]{"Name", "Surname", "E-Mail", "Gender", "Level"}, 0
    ) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        adminTable = new javax.swing.JTable();
        btnNewAdmin = new javax.swing.JButton();
        btnAdminDelete = new javax.swing.JButton();
        btnAdminEdit = new javax.swing.JButton();
        labelAdminNumber = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        comboEdit = new javax.swing.JComboBox<>();
        txtEdit = new javax.swing.JTextField();
        labelNowUser = new javax.swing.JLabel();
        labelMain = new javax.swing.JLabel();
        labelWriterControl1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(710, 630));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        adminTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        adminTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        adminTable.setToolTipText("");
        adminTable.setRowHeight(25);
        jScrollPane1.setViewportView(adminTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 430, 470));

        btnNewAdmin.setText("New Admin");
        btnNewAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewAdminActionPerformed(evt);
            }
        });
        getContentPane().add(btnNewAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 290, -1, -1));

        btnAdminDelete.setText("Delete");
        btnAdminDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdminDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 290, 104, -1));

        btnAdminEdit.setText("Edit ");
        btnAdminEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminEditActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdminEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 400, 93, -1));

        labelAdminNumber.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelAdminNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelAdminNumber.setText("Admin Number");
        getContentPane().add(labelAdminNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 220, 190, 46));

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/AdsÄ±z.png"))); // NOI18N
        btnBack.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBack.setBorderPainted(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 40));

        getContentPane().add(comboEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 400, 100, -1));
        getContentPane().add(txtEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 350, 100, -1));

        labelNowUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(labelNowUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 530, 710, 40));

        labelMain.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        labelMain.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelMain.setText("DolicHenus News");
        getContentPane().add(labelMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, -4, 710, 70));

        labelWriterControl1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        labelWriterControl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelWriterControl1.setText("Admin Control");
        getContentPane().add(labelWriterControl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 140, 180, 46));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdminEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminEditActionPerformed
        if (adminTable.getSelectedRow() != -1) {

            int selectedRow = adminTable.getSelectedRow();
            String selectedField = comboEdit.getSelectedItem().toString().trim();
            String newValue = txtEdit.getText().trim();

            if (newValue.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter a new value!");
                return;
            }

            String email = adminTable.getValueAt(selectedRow, 2).toString().trim();

            for (int j = 0; j < Admin.getAllAdmin().size(); j++) {
                if (Admin.getAllAdmin().get(j).getEmail().trim().equals(email)) {
                    Admin tempAdmin = (Admin) Admin.getAllAdmin().get(j);

                    switch (selectedField) {
                        case "Name":
                            DatabaseCodes.dbAdminEdit(newValue, "name", tempAdmin.getEmail());
                            tempAdmin.setName(newValue);
                            adminTable.setValueAt(newValue, selectedRow, 0);
                            break;
                        case "Surname":
                            DatabaseCodes.dbAdminEdit(newValue, "surname", tempAdmin.getEmail());
                            tempAdmin.setSurname(newValue);
                            adminTable.setValueAt(newValue, selectedRow, 1);
                            break;
                        case "Gender":
                            DatabaseCodes.dbAdminEdit(newValue, "gender", tempAdmin.getEmail());
                            tempAdmin.setGender(newValue);
                            adminTable.setValueAt(newValue, selectedRow, 3);
                            break;
                        case "Password":
                            DatabaseCodes.dbAdminEdit(newValue, "password", tempAdmin.getEmail());
                            tempAdmin.setPassword(newValue);
                            break;
                        default:
                            return;
                    }

                    Admin.getAllAdmin().set(j, tempAdmin);
                    txtEdit.setText("");
                    break;
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please choose a row.");
        }
    }//GEN-LAST:event_btnAdminEditActionPerformed

    private void btnNewAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewAdminActionPerformed

        SigninFrame rs = new SigninFrame("admin");
        rs.setVisible(true);
        rs.setLocationRelativeTo(this);

        this.dispose();


    }//GEN-LAST:event_btnNewAdminActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        AdminMainFrame amf = new AdminMainFrame();

        amf.setVisible(true);
        amf.setLocationRelativeTo(this);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAdminDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminDeleteActionPerformed
        int[] selectedViewRows = adminTable.getSelectedRows();

        if (selectedViewRows.length > 0) {
            ArrayList<String> mailsToRemove = new ArrayList<>();

            for (int viewRow : selectedViewRows) {
                int modelRow = adminTable.convertRowIndexToModel(viewRow);
                String tempMail = allAdminModel.getValueAt(modelRow, 2).toString();
                mailsToRemove.add(tempMail);
            }

            ArrayList<Users> adminList = Admin.getAllAdmin();

            for (int i = 0; i < adminList.size(); i++) {
                Admin admin = (Admin) adminList.get(i);
                if (admin.getPermissionLevel().equals("0")) {
                    JOptionPane.showConfirmDialog(
                            null,
                            "Permission level 0 cannot delete.",
                            "ERROR",
                            JOptionPane.DEFAULT_OPTION,
                            JOptionPane.ERROR_MESSAGE
                    );
                } else {

                    for (int j = selectedViewRows.length - 1; j >= 0; j--) {
                        int modelRow = adminTable.convertRowIndexToModel(selectedViewRows[j]);
                        allAdminModel.removeRow(modelRow);
                        break;
                    }

                    if (mailsToRemove.contains(admin.getEmail())) {
                        DatabaseCodes.dbAdminDeleter(admin.getEmail());
                        adminList.remove(i);
                        i--;
                    }
                }

            }

        }

    }//GEN-LAST:event_btnAdminDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable adminTable;
    private javax.swing.JButton btnAdminDelete;
    private javax.swing.JButton btnAdminEdit;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnNewAdmin;
    private javax.swing.JComboBox<String> comboEdit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelAdminNumber;
    private javax.swing.JLabel labelMain;
    private javax.swing.JLabel labelNowUser;
    private javax.swing.JLabel labelWriterControl1;
    private javax.swing.JTextField txtEdit;
    // End of variables declaration//GEN-END:variables
}
