/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Panel;

import Objects.*;
import SQL.DatabaseCodes;
import com.fasterxml.jackson.core.JsonProcessingException;
import java.awt.Component;
import java.awt.Image;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author erens
 */
public class WriterMainFrame extends javax.swing.JFrame {

    /**
     * Creates new form WriterMainFrame
     */
    public WriterMainFrame() {
        initComponents();
        PublicMethods.generalLabel(labelNowUser);
        String mail = MainFrame.getEmail();

        for (Users users : Writer.getAllWriters()) {
            Writer writer = (Writer) users;
            if (writer.getEmail().equals(mail)) {
                useWriter = writer;
            }
        }

        //Writers news data writer
        labelFav();

        writerNewsModel.setRowCount(0);
        writerTable.revalidate();
        writerTable.repaint();
        writerTable.setRowHeight(25);
        if (useWriter != null) {
            for (News news : useWriter.getNews()) {
                writerNewsModel.addRow(new Object[]{news.getTitle(), news.getHeaderImage(), news.getLike(), news.getDislike(),
                    news.getGenres(), news.getPublishDate()

                });
            }
        }

        writerTable.setModel(writerNewsModel);
        writerTable.revalidate();
        writerTable.repaint();

        writerTable.getTableHeader().setResizingAllowed(false);
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(writerNewsModel);
        writerTable.setRowSorter(sorter);
        writerTable.getColumnModel().getColumn(1).setCellRenderer(new ImageCellRenderer());

    }

    private Writer useWriter = null;

    DefaultTableModel writerNewsModel = new DefaultTableModel(
            new Object[]{"Title", "Cover Image", "Like", "Dislike", "Genres", "Publish Date"}, 0
    ) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    class ImageCellRenderer extends JLabel implements TableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
                boolean hasFocus, int row, int column) {
            if (value instanceof ImageIcon) {
                ImageIcon image = (ImageIcon) value;
                if (image.getIconHeight() > writerTable.getRowHeight()
                        || image.getIconWidth() > writerTable.getColumnModel().getColumn(1).getWidth()) {
                    Image scaledImage = image.getImage().getScaledInstance(
                            writerTable.getColumnModel().getColumn(1).getWidth(),
                            writerTable.getRowHeight(),
                            Image.SCALE_AREA_AVERAGING
                    );
                    ImageIcon scaledImageIcon = new ImageIcon(scaledImage);
                    setIcon(scaledImageIcon);
                    setText("");
                } else {
                    setIcon(image);
                    setText("");
                }

            } else {
                setText(value != null ? value.toString() : "");
                setIcon(null);
            }
            return this;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelNowUser = new javax.swing.JLabel();
        labelMain = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        writerTable = new javax.swing.JTable();
        btnRead = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        labelFav = new javax.swing.JLabel();
        btnNewNews = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        labelFavCount = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(710, 630));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelNowUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(labelNowUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 580, 700, 40));

        labelMain.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        labelMain.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelMain.setText("DolicHenus News");
        getContentPane().add(labelMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 70));

        writerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(writerTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, 540));

        btnRead.setText("Read");
        btnRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadActionPerformed(evt);
            }
        });
        getContentPane().add(btnRead, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 140, 210, 50));

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        getContentPane().add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 200, 210, 50));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 260, 210, 50));

        labelFav.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelFav.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelFav.setText("Favorite / Like / Dislike");
        getContentPane().add(labelFav, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 430, 230, 70));

        btnNewNews.setText("New News");
        btnNewNews.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewNewsActionPerformed(evt);
            }
        });
        getContentPane().add(btnNewNews, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 320, 210, 60));

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/AdsÄ±z.png"))); // NOI18N
        btnBack.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBack.setBorderPainted(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 40));

        labelFavCount.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        labelFavCount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelFavCount.setText("0/0/0");
        getContentPane().add(labelFavCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 480, 210, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        PublicMethods.accountClear();
        LoginFrame rf = new LoginFrame("writer");
        rf.setVisible(true);
        rf.setLocationRelativeTo(this);

        this.dispose();

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadActionPerformed
        int[] rows = writerTable.getSelectedRows();
        if (rows.length > 0) {
            int[] selectedModelRows = new int[rows.length];

            for (int i = 0; i < rows.length; i++) {
                selectedModelRows[i] = writerTable.convertRowIndexToModel(rows[i]);
            }
            NewsFrame.setAdminRead(true);
            NewsFrame.setWriterRead(true);
            for (int i = 0; i < selectedModelRows.length; i++) {
                int realIndex = selectedModelRows[i];

                NewsFrame nf = new NewsFrame(writerNewsModel.getValueAt(realIndex, 0).toString(), null);
                nf.setVisible(true);
                nf.setLocationRelativeTo(this);

            }

        }

    }//GEN-LAST:event_btnReadActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int[] selectedViewRows = writerTable.getSelectedRows();

        if (selectedViewRows.length > 0) {

            for (int i = selectedViewRows.length - 1; i >= 0; i--) {
                int selectedViewRow = selectedViewRows[i];
                int selectedModelRow = writerTable.convertRowIndexToModel(selectedViewRow);

                String title = writerTable.getValueAt(selectedViewRow, 0).toString();
                Writer writer = PublicMethods.writerFinderbyTitle(title);

                boolean newsFound = false;
                for (News news : News.getAllNews()) {
                    if (news.getTitle().equals(title)) {

                        //CollectComments
                        ArrayList<Comment> commentsToDelete = new ArrayList<>();
                        for (Comment comment : Comment.getAllComments()) {
                            if (news.getNewsComments().contains(comment)) {
                                commentsToDelete.add(comment);

                            }
                        }

                        //It will delete news from readers array
                        for (Users user : Reader.getAllReaders()) {
                            Reader reader = (Reader) user;
                            if (reader.getLikedNews().contains(news)) {
                                DatabaseCodes.likedNewsToReaderDb(news, reader, false);
                                reader.getLikedNews().remove(news);
                            }
                            if (reader.getDislikedNews().contains(news)) {
                                DatabaseCodes.dislikedNewsToReaderDb(news, reader, false);
                                reader.getDislikedNews().remove(news);
                            }
                            for (Comment comment : commentsToDelete) {
                                DatabaseCodes.dbCommentDeleter(comment.getCommentId(), reader.getEmail(), comment);
                                Comment.commentDeleter(comment.getCommentId(), news);
                                News.updateNewsReaction(news.getNewsId(), "-comment", comment);
                            }
                        }

                        News.deleteNews(news);
                        DatabaseCodes.dbWriterNewsChanger(news, writer, false);
                        writer.getNews().remove(news);
                        News.getAllNews().remove(news);
                        newsFound = true;
                        break;
                    }
                }
                
                DatabaseCodes.callDeleter();

                if (newsFound) {
                    DefaultTableModel model = (DefaultTableModel) writerTable.getModel();
                    model.removeRow(selectedModelRow);
                }

            }

        }
        labelFav();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnNewNewsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewNewsActionPerformed
        WriterFrame wf = new WriterFrame(useWriter.getEmail());
        wf.setVisible(true);
        wf.setLocationRelativeTo(this);

        this.dispose();
    }//GEN-LAST:event_btnNewNewsActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        int selectedRow = writerTable.getSelectedRow();
        if (selectedRow != -1) {

            int selectedModelRow = writerTable.convertRowIndexToModel(selectedRow);
            News useNews = null;
            for (News news : News.getAllNews()) {
                if (news.getTitle().equals(writerNewsModel.getValueAt(selectedModelRow, 0))) {
                    useNews = news;
                }
            }

            WriterFrame wf = new WriterFrame(useWriter.getEmail(), useNews);
            wf.setVisible(true);
            wf.setLocationRelativeTo(this);

            this.dispose();
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void labelFav() {
        int favCount = 0;
        for (Users users : Reader.getAllReaders()) {
            Reader reader = (Reader) users;
            if (reader.getFavoriteWriters().contains(useWriter)) {
                favCount++;
            }
        }

        int like = 0;
        int dislike = 0;
        if (useWriter.getNews() != null && !useWriter.getNews().isEmpty()) {
            for (int j = 0; j < useWriter.getNews().size(); j++) {
                like += useWriter.getNews().get(j).getLike();
                dislike += useWriter.getNews().get(j).getDislike();
            }
        }
        labelFavCount.setText(favCount + "/" + like + "/" + dislike);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WriterMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WriterMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WriterMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WriterMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WriterMainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNewNews;
    private javax.swing.JButton btnRead;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelFav;
    private javax.swing.JLabel labelFavCount;
    private javax.swing.JLabel labelMain;
    private javax.swing.JLabel labelNowUser;
    private javax.swing.JTable writerTable;
    // End of variables declaration//GEN-END:variables
}
